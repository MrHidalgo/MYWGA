///
/// IMPORT BLOCK
///
@import "../_mixin/mixin";
@import "../_function/function";
///
/// DECLARATION VARIABLE
///
$w-all              : return-value(dimension, all);

$c-white            : return-value(color, white);
$c-whisper          : return-value(color, whisper);
$c-atlantis         : return-value(color, atlantis);

$f-PN_black         : return-value(fonts, PN_black);
$f-PN_bold          : return-value(fonts, PN_bold);
///
/// MAIN BLOCK
///
.lose {
	min-height: 170px;
	background-color: $c-whisper;
	padding-top: 40px;
	padding-bottom: 40px;


	&__title {
		font: {
			size: 30px;
			family: $f-PN_black;
		}
		color: $c-atlantis;
		@include respond-to("large") {
			width: 100%;
			text-align: center;
			margin-bottom: 25px;


			br {
				display: none;
			}
		}
		@include respond-to("medium-all") {
			width: 100%;
			text-align: center;
			margin-bottom: 25px;


			br {
				display: none;
			}
		}
	}


	&__row {
		display: flex;
		align-items: center;
		justify-content: space-around;
		@include respond-to("large") {
			flex-flow: row wrap;
		}
		@include respond-to("medium-all") {
			flex-flow: row wrap;
		}
	}


	&__count {
		display: flex;
		align-items: center;
		@include respond-to("large") {
			width: 50%;
		}
		@include respond-to("medium-all") {
			width: 100%;
			margin-bottom: 25px;
			justify-content: center;
		}


		&-num {
			@include mixinDimensions(42px, 72px);
			background-color: $c-white;
			margin-left: 5px;
			padding-left: 5px;
			padding-right: 5px;
			text-align: center;
			font: {
				family: $f-PN_bold;
			}
			@include respond-to("small-all") {
				@include mixinDimensions(32px, 62px);
			}


			&:first-of-type {
				margin-left: 0;
			}
		}


		&-text {
			color: $c-atlantis;
			margin-left: 20px;
			font: {
				family: $f-PN_black;
			}
		}


		&-num,
		&-text {
			font: {
				size: 50px;
			}
			@include respond-to("small-all") {
				font-size: 40px;
			}
		}
	}
}